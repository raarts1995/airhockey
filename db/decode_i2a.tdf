--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=12 LPM_WIDTH=4 data eq
--VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_decode 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


-- Copyright (C) 2016  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_i2a
( 
	data[3..0]	:	input;
	eq[11..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[11..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode1827w[3..0]	: WIRE;
	w_anode1844w[3..0]	: WIRE;
	w_anode1854w[3..0]	: WIRE;
	w_anode1864w[3..0]	: WIRE;
	w_anode1874w[3..0]	: WIRE;
	w_anode1884w[3..0]	: WIRE;
	w_anode1894w[3..0]	: WIRE;
	w_anode1904w[3..0]	: WIRE;
	w_anode1914w[3..0]	: WIRE;
	w_anode1925w[3..0]	: WIRE;
	w_anode1935w[3..0]	: WIRE;
	w_anode1945w[3..0]	: WIRE;
	w_anode1955w[3..0]	: WIRE;
	w_anode1965w[3..0]	: WIRE;
	w_anode1975w[3..0]	: WIRE;
	w_anode1985w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[3..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode1904w[3..3], w_anode1894w[3..3], w_anode1884w[3..3], w_anode1874w[3..3], w_anode1864w[3..3], w_anode1854w[3..3], w_anode1844w[3..3], w_anode1827w[3..3]);
	eq_wire2w[] = ( w_anode1985w[3..3], w_anode1975w[3..3], w_anode1965w[3..3], w_anode1955w[3..3], w_anode1945w[3..3], w_anode1935w[3..3], w_anode1925w[3..3], w_anode1914w[3..3]);
	w_anode1827w[] = ( (w_anode1827w[2..2] & (! data_wire[2..2])), (w_anode1827w[1..1] & (! data_wire[1..1])), (w_anode1827w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1844w[] = ( (w_anode1844w[2..2] & (! data_wire[2..2])), (w_anode1844w[1..1] & (! data_wire[1..1])), (w_anode1844w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1854w[] = ( (w_anode1854w[2..2] & (! data_wire[2..2])), (w_anode1854w[1..1] & data_wire[1..1]), (w_anode1854w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1864w[] = ( (w_anode1864w[2..2] & (! data_wire[2..2])), (w_anode1864w[1..1] & data_wire[1..1]), (w_anode1864w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1874w[] = ( (w_anode1874w[2..2] & data_wire[2..2]), (w_anode1874w[1..1] & (! data_wire[1..1])), (w_anode1874w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1884w[] = ( (w_anode1884w[2..2] & data_wire[2..2]), (w_anode1884w[1..1] & (! data_wire[1..1])), (w_anode1884w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1894w[] = ( (w_anode1894w[2..2] & data_wire[2..2]), (w_anode1894w[1..1] & data_wire[1..1]), (w_anode1894w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1904w[] = ( (w_anode1904w[2..2] & data_wire[2..2]), (w_anode1904w[1..1] & data_wire[1..1]), (w_anode1904w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1914w[] = ( (w_anode1914w[2..2] & (! data_wire[2..2])), (w_anode1914w[1..1] & (! data_wire[1..1])), (w_anode1914w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1925w[] = ( (w_anode1925w[2..2] & (! data_wire[2..2])), (w_anode1925w[1..1] & (! data_wire[1..1])), (w_anode1925w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1935w[] = ( (w_anode1935w[2..2] & (! data_wire[2..2])), (w_anode1935w[1..1] & data_wire[1..1]), (w_anode1935w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1945w[] = ( (w_anode1945w[2..2] & (! data_wire[2..2])), (w_anode1945w[1..1] & data_wire[1..1]), (w_anode1945w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1955w[] = ( (w_anode1955w[2..2] & data_wire[2..2]), (w_anode1955w[1..1] & (! data_wire[1..1])), (w_anode1955w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1965w[] = ( (w_anode1965w[2..2] & data_wire[2..2]), (w_anode1965w[1..1] & (! data_wire[1..1])), (w_anode1965w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1975w[] = ( (w_anode1975w[2..2] & data_wire[2..2]), (w_anode1975w[1..1] & data_wire[1..1]), (w_anode1975w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1985w[] = ( (w_anode1985w[2..2] & data_wire[2..2]), (w_anode1985w[1..1] & data_wire[1..1]), (w_anode1985w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
